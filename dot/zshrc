# Created by newuser for 4.3.17
fpath=(~/.zsh/completion $fpath)

export PATH=/home/olivier/dotfiles/scripts:/home/olivier/.local/bin:$PATH

#source ~/Projects/zsh-git-prompt/zshrc.sh
#source ~/Projects/liquidprompt/liquidprompt
#PROMPT='%{'$'\033[01;32m%}%n@%B%m%{\033[00m%} %{\033[01;33m%}%~%{\033[00m%}%b$(git_super_status)%{\033[00m%} '

# History option
setopt INC_APPEND_HISTORY
setopt histignorealldups sharehistory
# Keep 100000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history

# general
export EDITOR=vim
alias o="xdg-open"
alias reload="source ~/.zshrc"
alias autube="youtube-dl -x"
alias ls='ls --color=auto'
alias l="ls -lh"
alias taupe="netstat -taupe"
alias c="cd .."
alias cc="cd ../.."
alias ccc="cd ../../.."
alias cccc="cd ../../../.."


# ANTIGEN: Zsh package manager
source $HOME/dotfiles/antigen.zsh
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle nojhan/liquidprompt
antigen bundle zsh-users/zsh-completions src
antigen apply


#alias m="python manage.py"
alias as="apt-cache search"
alias ai="sudo apt-get install"
alias apt="sudo apt"
alias attach="sudo lxc-attach -n"
alias wiki="vim -c :VimwikiIndex"
alias meteo='curl http://wttr.in/bruxelles'
alias td=qtodotxt2
alias vw='vim -c VimwikiIndex'

# Insert Google DNS in resolv.conf
alias gdns="sudo sh -c 'echo nameserver 8.8.8.8 > /etc/resolv.conf'"

# set up PIP Download cache so it won't reload the package
export PIP_DOWNLOAD_CACHE=$HOME/.cache/pip


## Let a bunch of app configure themselves
# For proper color output in ls
eval "$(dircolors -b)"

# FZF for fuzzy
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_COMPLETION_TRIGGER=''
bindkey '^T' fzf-completion
bindkey '^I' $fzf_default_completion

# Lesspipe (convert binary output unreadable by less
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# Virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Projects #used by mkproject (of virtualenvwrapper)
#source /etc/bash_completion.d/virtualenvwrapper
# Conditionaly load in case it's not installed
[ -f /usr/share/virtualenvwrapper/virtualenvwrapper_lazy.sh ] && source /usr/share/virtualenvwrapper/virtualenvwrapper_lazy.sh
# list virtualenv  (manager by venvwrapper) without all the dumb output of lsvirtualenvs
alias lsve="find ~/.virtualenvs  -maxdepth 1 -mindepth 1 -type d  -printf '%f\\n'|sort"


# Autocompletion
autoload -Uz compinit
#compinit ## fucking slow down zsh, apparently we may only need to launch it when completion is updated?
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' max-errors 3 numeric
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
#
# Taken from debian default .zsh not sure what it does yet
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2


#  WORK and Development
alias fakesmtp="/usr/bin/python -m smtpd -n -c DebuggingServer localhost:4025"
# left for exemple
# alias snr="/home/olivier/.virtualenvs/sn/bin/python /home/olivier/Projects/Supernova/manage.py runserver 8001"
# vpn
# alias vpn="cd ~/.certs/newvpn && sudo openvpn rn-vpn.conf"
#alias dbpwreset="psql -c \"update res_users set password ='admin';\""
# retrievedb() {
#    lftp -c "open sftp://bkp@sabayon.railnova.eu; get bkp@donut.railnova.eu/$1/DAILY/LAST.dump -o ~/Projects/dumps/$1-$(date -I).dump"
# }

alias dbsize="psql postgres -c \"select datname, pg_size_pretty(pg_database_size(datname)) as size from pg_database order by pg_database_size(datname) desc;\""

dbrestore() {
    pg_restore -d postgres --create -x -O  $1

}

#alias irc="echo -en \"\033]0;chat\a\"; ssh staz@server.staz.be -t screen -RDU pts-7; echo -en \"\033]0;Terminal\a\""
alias irc="echo -en \"\033]0;chat\a\"; autossh olivier@server.staz.be -t tmux -S irc attach; echo -en \"\033]0;Terminal\a\""
alias q="echo -en \"\033]0;/tmp/q\a\"; touch /tmp/q; tail -f /tmp/q; echo -en \"\033]0;Terminal\a\""
alias shell='sudo -u django /home/django/Supernova/venv/bin/python /home/django/Supernova/manage.py shell_plus'

# git help
function gcm() { git commit -m "$(echo $*)";}
function git-current-branch() {
    git rev-parse --abbrev-ref HEAD
}
alias gss="git status --short"

# push and set upstream
function gpp(){
    git push --set-upstream origin $(git-current-branch)
}
# like gpp but without pushing
function gsp(){
    git branch --set-upstream-to=origin/$(git-current-branch) $(git-current-branch)
}



# For python developement, jump into module
cdp () {
    cd "$(python -c "import os.path as _, ${1}; \
            print(_.dirname(_.realpath(${1}.__file__[:-1])))"
        )"
}

# Ctrl-Z will now bring back the app
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# alt-p : insert last command result
zmodload -i zsh/parameter
insert-last-command-output() {
  LBUFFER+="$(eval $history[$((HISTCMD-1))])"
}
zle -N insert-last-command-output
bindkey '^[p' insert-last-command-output


# Edit command line by pressing Ctrl+x Ctrl+e
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^Xv' edit-command-line

# Ctrl-xl remove content betwen ctrl space and region
bindkey "^Xl" kill-region

# Control the tab title in the terminal application
title() {
    echo -en "\033]0;$*\a";
}
resettitle() {
    echo -en \"\033]0;Terminal\a\";
}

# SSH a host, change the tab title and tmux attach
tssh(){
    echo -en "\033]0;$*\a";
    /usr/bin/ssh -t $@ "tmux attach || tmux new";
    echo -en "\033]0;Terminal\a";
}
# Idem with autossh instead
ta(){
    echo -en "\033]0;$*\a";
    /usr/bin/autossh -t $@ "tmux attach || tmux new";
    echo -en "\033]0;Terminal\a";
}


# Filebrowser
# support for nnn see https://github.com/jarun/nnn#quickstart
export NNN_TMPFILE="$HOME/.config/nnn/.lastd"
export NNN_FALLBACK_OPENER=xdg-open

n()
{
        nnn "$@"

        if [ -f $NNN_TMPFILE ]; then
                . $NNN_TMPFILE
                rm $NNN_TMPFILE
        fi
}

# Retire / de la definition des mots, ainsi quand on fait ctrl-w ca vire pas tout un path
# https://unix.stackexchange.com/questions/48577/modifying-the-zsh-shell-word-split
# Allows to kill backward word path by path using ctrl+w
# With this, ctrl+w on '/usr/bin' will produce '/usr'. Without it, '/usr/bin' is removed.
# Default is: *?_-.[]~=/&;!#$%^(){}<>
export WORDCHARS=$WORDCHARS:s:/:

# For android developement for Sailsense
export ANDROID_HOME=$HOME/Projects/sailsense/android-sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools


help()
{
    echo "A start of help"
    echo "Commands:"
    echo " n for a file browser"
    echo " fc to edit last command in vim"
    echo " "
    echo "Keyboard shortcuts:"
    echo " Ctrl-z to do fg"
    echo " Ctrl-r to history search with fzf"
    echo " Ctrl-t to find file with fzf"
    echo " Alt-C cd into directory with fzf"
    echo " Alt-. take args from last command"
    echo " Ctrl=Xv Like fc but for current command"
}

alias morehelp="cat $HOME/dotfiles/shellhelp.txt"


# https://jcode.me/cdpath-with-zsh/
# temporary test, i will see if i like it
cdpath=($HOME)

# sailsense
alias coldrun="/home/olivier/.virtualenvs/coldrun/bin/python3 /home/olivier/Projects/sailsense/coldrun/manage.py"
alias em="title emulator && /home/olivier/Projects/sailsense/android-sdk/emulator/emulator   @Pixel_3_API_27"

# For yarn
# Run once: yarn config set prefix ~/.yarn
export PATH=$PATH:~/.yarn/bin
alias dr='df -h|grep sd'


# https://gist.github.com/premek/6e70446cfc913d3c929d7cdbfe896fef
function mv() {
  if [ "$#" -ne 1 ] || [ ! -f "$1" ]; then
    command mv "$@"
    return
  fi

  newfilename="$1"
  vared newfilename
  command mv -v -- "$1" "$newfilename"
}




# testing kitty, we should add a guard on this
## Completion for kitty
#kitty + complete setup zsh | source /dev/stdin
alias icat="kitty icat --align=left"
alias isvg="rsvg-convert | icat"
alias EMV-CAP="/home/olivier/.virtualenvs/emvcap/bin/python /home/olivier/Projects/EMVCAP-1.4/EMV-CAP"
#if [ -e /home/olivier/.nix-profile/etc/profile.d/nix.sh ]; then . /home/olivier/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
#
#
# Jrnl
#  We want draft note file to be created outside /tmp so if the laptop crash during edition we don't lost them
#  TMPDIR is used in the tempfile python module to override the /tmp dir
alias jrnl="TMPDIR=/home/olivier/.tmp jrnl"
alias openpr='firefox -P work "https://github.com/BLSQ/iaso/pull/new/`git branch --show-current`"'

alias eb="/home/olivier/.virtualenvs/eb/bin/eb"
